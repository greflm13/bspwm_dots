#!/bin/bash

VOLUME_ICONS=("" "")
MUTED_ICON=""
MUTED_COLOR="%{F#6b6b6b}"
DANGER_COLOR="%{F#FF3F4F}"
WARN_COLOR="%{F#FFD945}"
VOLUMESTEP=0.02
MICROPHONE=""
MICROPHONEMUTE=""

# Run `pw-play --list-targets` for a list of sink names.
ignored_sinks=(
    "PulseEffects Sink"
)

dmenu_command="dmenu -i -nb #08090c -nf #f6f6f6 -sb #3e4451 -sf #f6f6f6"

switch-sink() {
    sinkids="$(wpctl status | sed '0,/Audio/d' | sed '/Video/,$d' | sed '0,/Sinks/d' | sed '/Sources/,$d' | sed '$d' | sed -s 's/\*//g' | awk '{print $2}' | sed -s 's/\.//g')"
    names="$(for id in $sinkids; do wpctl inspect $id | grep node.description | sed -s 's/^[^"]*"//g' | sed -s 's/"//g'; done)"

    chosen="$(echo -e "$names" | $dmenu_command -l "$(echo "$sinkids" | wc -l)" -p "Audio Device")"

    case $chosen in
        "")
            echo "No option chosen."
            ;;
        *)
            for id in $sinkids; do
                if [[ "$chosen" == "$(wpctl inspect $id | grep node.description | sed -s 's/^[^"]*"//g' | sed -s 's/"//g')" ]]; then
                    chosenid=$id
                fi
            done
            current_vol=$(echo "$(wpctl get-volume $chosenid | awk '{print $2}' | head -n1) * 100" | bc | sed -s "s/\.00//g")
            current_mute=$(wpctl get-volume $chosenid | awk '{print $3}' | head -n1)
            setting="$(echo -e "change volume: $current_vol\ntoggle mute: $current_mute\nset default sink" | $dmenu_command -l 3 -p "Settings for $chosen")"

            case $setting in
                "change volume: $current_vol")
                    volume="$(echo "" | $dmenu_command -p "Current Volume: $current_vol")"
                    [[ "$volume" =~ ^[0-9]{1,3}$ ]] && wpctl set-volume $chosenid "$volume"%
                    ;;
                "toggle mute: $current_mute")
                    wpctl set-mute $chosenid toggle
                    ;;
                "set default sink")
                    wpctl set-default $chosenid
                    ;;
                *)
                    echo "No option chosen."
                    ;;
            esac
            ;;
    esac
}

switch-mic() {
    micids="$(wpctl status | sed '0,/Audio/d' | sed '/Video/,$d' | sed '0,/Sources/d' | sed '/Filters/,$d' | sed '$d' | sed -s 's/\*//g' | awk '{print $2}' | sed -s 's/\.//g')"
    names="$(for id in $micids; do wpctl inspect $id | grep node.description | sed -s 's/^[^"]*"//g' | sed -s 's/"//g'; done)"

    chosen="$(echo -e "$names" | $dmenu_command -l "$(echo "$micids" | wc -l)" -p "Microphone")"

    case $chosen in
        "")
            echo "No option chosen."
            ;;
        *)
            for id in $micids; do
                if [[ "$chosen" == "$(wpctl inspect $id | grep node.description | sed -s 's/^[^"]*"//g' | sed -s 's/"//g')" ]]; then
                    chosenid=$id
                fi
            done
            wpctl set-default $chosenid
            ;;
    esac
}

mic-status() {
    IS_MUTED=$(wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | awk '{print $3}')
    if [ "${IS_MUTED}" == "[MUTED]" ]; then
        echo "${MUTED_COLOR}${MICROPHONEMUTE}"
    else
        echo "${MICROPHONE}"
    fi
}

output() {
    VOLUME=$(echo "$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2}' | head -n1) * 100" | bc | sed -s "s/\.00//g")
    IS_MUTED=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $3}')

    if [ "${IS_MUTED}" == "[MUTED]" ]; then
        echo "${MUTED_COLOR}${MUTED_ICON} Muted"
    else
        if [[ "${VOLUME}" -le 40 ]]; then
            printf '%s ' "${VOLUME_ICONS[0]}"
        elif [[ "${VOLUME}" -gt 40 && "${VOLUME}" -le 100 ]]; then
            printf '%s ' "${VOLUME_ICONS[1]}"
        elif [[ "${VOLUME}" -gt 100 && "${VOLUME}" -le 120 ]]; then
            echo -n "${WARN_COLOR}"
            printf '%s ' "${VOLUME_ICONS[1]}"
        elif [[ "${VOLUME}" -gt 120 ]]; then
            echo -n "${DANGER_COLOR}"
            printf '%s ' "${VOLUME_ICONS[1]}"
        fi
        echo "${VOLUME}%"
    fi

}

action=$1
case $action in
    "volume-up")
        wpctl set-volume @DEFAULT_AUDIO_SINK@ "$VOLUMESTEP"+
        ;;
    "volume-down")
        wpctl set-volume @DEFAULT_AUDIO_SINK@ "$VOLUMESTEP"-
        ;;
    "toggle-mute")
        wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
        ;;
    "switch-sink")
        switch-sink
        ;;
    "mic-mute")
        wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
        ;;
    "switch-mic")
        switch-mic
        ;;
    "mic-status")
        mic-status
        pactl subscribe 2>/dev/null | grep --line-buffered "Event 'change' on source" | {
            while read line; do
                {
                    mic-status
                }
        done
        }
        ;;
    "")
        output
        #pactl subscribe 2>/dev/null
        pactl subscribe 2>/dev/null | grep --line-buffered "Event 'change' on sink" | {
            while read line; do
                {
                    output
                }
        done
        }    
        ;;
    *)
        exit 0
        ;;
esac

